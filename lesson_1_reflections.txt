How did viewing a diff between two versions of a file help you see the bug that
was introduced?

    It was clear by looking at the - and + signs that we can easily identify 
    what chanages we have been made. 


How could having easy access to the entire history of a file make you a more
efficient programmer in the long term?

    By having easy access to the entire history of a file, we can clearly 
    look through what we have done. We can also easily make changes without
    worrying about mistakes we would make along the way because we can easily
    refer back and pull out the working/non-mistake version to redo it.


What do you think are the pros and cons of manually choosing when to create a
commit, like you do in Git, vs having versions automatically saved, like Google
docs does?

    In case of accidents like battry runs out, 'blue screen', computer shuts down
    by itself, then we would lose all the new codes that we typed.


Why do you think some version control systems, like Git, allow saving multiple
files in one commit, while others, like Google Docs, treat each file separately?

    It all depends on what kind of files. If the files are unrelated, then you 
    could treat each file separately. On the other hand, if the files are related
    then, it would be better to commit all of them at once.


How can you use the commands git log and git diff to view the history of files?

    We can use git log to get the overview or brief description of what the
    changes are. Then we can use git diff to compare two commits to see the 
    details of the changes.

How might using version control make you more confident to make changes that
could break something?

    We could always go back to older version and re-work it.

Now that you have your workspace set up, what do you want to try using Git for?

    I want to try using Git for Front-End and Back-End developments.